[{"authors":null,"categories":null,"content":"Mehran Ghandehari, and Barbara P. Buttenfield (2018). \u0026lsquo;Slope-Adjusted Surface Area Computations in Digital Terrain\u0026rsquo;, Proceedings of Geomorphometry 2018 conference, the 5th International Conference of the ISG, Boulder, Colorado, August 13-17\n","date":1533103200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1533103200,"objectID":"f06f70e0dced3bb48a706524ed86c6bc","permalink":"https://mehran.netlify.com/talk/geomorphometry2018/","publishdate":"2018-08-01T00:00:00-06:00","relpermalink":"/talk/geomorphometry2018/","section":"talk","summary":"Area is an integral part of any spatial database and has a significant role in many geographic analyses and applications. Planar algorithms that are widely used to calculate area ignore the slope and curvature of the terrain and result in under-estimation, particularly as pixel size increases or in uneven terrain. Calculating surface area using a regular DEM can overcome this issue by considering localized variations on the terrain surface. This paper investigates the scale- and algorithm-dependence of surface area calculations. The expectation is that for any individual pixel, the improvement in measurements can be relatively small, however, the additive effects across the study area can become significant. The method of dividing each DEM pixel into eight 3D triangles is commonly used to calculate surface area. In this research, the elevation of triangle vertices are estimated using different interpolation methods to establish rates of under-estimation for progressively larger pixels. These methods are validated against vertex elevations on a 3 meter lidar data benchmark. Bi-Cubic interpolation outperforms other interpolation methods for calculating DEM surface areas, with Linear, Bi-Linear and Jenness methods performing nearly as well, especially at coarser resolution. Relative accuracies are shown to degrade somewhat in rougher terrain.","tags":[],"title":"'Slope-Adjusted Surface Area Computations in Digital Terrain","type":"talk"},{"authors":["**Mehran Ghandehari**","Barbara P. Buttenfield","Carson J. Q. Farmer"],"categories":null,"content":"","date":1530424800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1530424800,"objectID":"3543c3168ca32a54080c60263d2286df","permalink":"https://mehran.netlify.com/publication/2018_ghandehari_etal_ijrs/","publishdate":"2018-07-01T00:00:00-06:00","relpermalink":"/publication/2018_ghandehari_etal_ijrs/","section":"publication","summary":"Terrain is commonly modelled on a grid of pixels in Digital Elevation Model (DEM). Pixels are considered flat and rigid, for computational simplicity (a ‘rigid pixel’ paradigm). This paradigm does not account for the slope and curvature of terrain within each pixel, generating imprecise measurements, particularly as pixel size increases or in uneven terrain. Interpolation methods are commonly used to relaxe the rigid pixel assumption and reconstruct the surface of a pixel for estimating elevation, and terrain derivatives (e.g., slope and curvature) within a pixel (a ‘surface-adjusted’ paradigm). This paper aims to compare different interpolation methods to investigate possible sub-pixel variations for estimating elevation of arbitrary points given a regular grid. Tests based on interpolating elevation values for 20,000 georeferenced random points from a regular grid DEM are presented, using a variety of exact and inexact local deterministic interpolation methods within contiguity configurations incorporating first and second order neighbours. The paper examines the sensitivity of surface adjusted estimations across a progression of spatial resolutions (10 m, 30 m, 100 m, and 1000 m DEMs) and a suite of terrain types varying in latitude, altitude, slope, and roughness, validating sub-pixel variations against direct elevation measurements on 3 m resolution lidar data. Two mathematical surfaces with appropriately added noise are also used as artificial DEMs to have a data-independent methodology. Results illustrate that the Bi-cubic interpolation methods outperform Linear, and Bi-linear methods in most DEM resolutions and terrain types. However, when the vertical accuracy of DEM is decreased, Linear, and Bi-linear methods have the best performance. The type of contiguity configuration appears to play a role in estimation errors as well, with tighter neighbourhoods for most interpolation methods exhibiting higher accuracy. The analysis also considers the balance between the increased computations needed to measure surface-adjusted elevation against the improvement in accuracy.","tags":[],"title":"Comparing the Accuracy of Interpolated Terrain Elevations Across Spatial Resolution","type":"publication"},{"authors":null,"categories":null,"content":"\u0026hellip;\n","date":1530165600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1530165600,"objectID":"18d05a63a1c8d7ed973cc51838494e41","permalink":"https://mehran.netlify.com/privacy/","publishdate":"2018-06-28T00:00:00-06:00","relpermalink":"/privacy/","section":"","summary":"\u0026hellip;","tags":null,"title":"Privacy Policy","type":"page"},{"authors":null,"categories":null,"content":"Area is an integral part of any spatial database and has a significant role in many geographic analyses and applications. Planar algorithms that are widely used to calculate area ignore the slope and curvature of the terrain and result in under-estimation, particularly as pixel size increases or in uneven terrain. Calculating surface area using a regular DEM can overcome this issue by considering localized variations on the terrain surface. This paper investigates the scale- and algorithm-dependence of surface area calculations. The expectation is that for any individual pixel, the improvement in measurements can be relatively small, however, the additive effects across the study area can become significant. The method of dividing each DEM pixel into eight 3D triangles is commonly used to calculate surface area. In this research, the elevation of triangle vertices are estimated using different interpolation methods to establish rates of under-estimation for progressively larger pixels. These methods are validated against vertex elevations on a 3 meter lidar data benchmark. Bi-Cubic interpolation outperforms other interpolation methods for calculating DEM surface areas, with Linear, Bi-Linear and Jenness methods performing nearly as well, especially at coarser resolution.\nCoding and statistical analysis are conducted in Python using open source modules (e.g., GDAL, Geopandas, numpy, scipy, and multiprocessing). The Amazon Web Services (AWS) is needed as a cloud computing service to handle large sets of DEM data, reduce time-to-results, and increases the speed of this research using high performance computers. In one of our study areas as an example, there are 25,500,000 pixels in the 10 m DEM. The surface area for each pixel should be calculated based on six different methods. This process is compute-intensive and very time-consuming, and the code needs to be parallelized to speed up the process. A virtual servers on AWS is used with 32 CPUs and 224 GB of RAM. This instance calculates surface area of 32 rows of DEM concurrently. Also, all of the computations are carried out in RAM and very large numpy arrays are saved in the memory.\nHere is the strategy we consider to process larger data sets in AWS. A single DEM at a single resolution is partitioned into strips covering 5 rows and all columns to create a task pool. The justification for 5 rows is that the interpolation methods using 3rd order polynomials require 5*5 neighborhoods. Once uploaded, each strip is processed by one CPU to estimate surface area by all interpolation methods, storing the results in a numpy array. Therefore, the strips can be executed concurrently to calculate the surface area for the entire DEM. The calculate surface area raster for all methods and DEM resolutions are saved into disk and are subsequently downloaded for validation against the surface area calculate from the LiDAR benchmark.\nReferrence: Mehran Ghandehari, and Barbara P. Buttenfield (2018). \u0026lsquo;Slope-Adjusted Surface Area Computations in Digital Terrain\u0026rsquo;, Proceedings of Geomorphometry 2018 conference, the 5th International Conference of the ISG, Boulder, Colorado, August 13-17\n","date":1524808800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1524808800,"objectID":"68b6f13b2bc43c8f0decdf2ba46e947a","permalink":"https://mehran.netlify.com/project/surfacearea/","publishdate":"2018-04-27T00:00:00-06:00","relpermalink":"/project/surfacearea/","section":"project","summary":"Slope-Adjusted Surface Area Computations in Digital Terrain","tags":["PhD"],"title":"Surface Area Computations","type":"project"},{"authors":null,"categories":null,"content":"Mehran Ghandehari, Barbara P. Buttenfield, and Carson J. Q. Farmer (2017). \u0026lsquo;Cross-Scale Analysis of Sub-Pixel Variations in Digital Elevation Models\u0026rsquo;, In: M. P. Peterson (Ed.), Advances in Cartography and Giscience 2017, Lecture Notes in Geoinformation and Cartography (LNGC), Springer, Cham. pp. 359-373.\n","date":1501567200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1501567200,"objectID":"2e44a5d1ef2e3f024bf8c2b366187dd7","permalink":"https://mehran.netlify.com/talk/icc2017/","publishdate":"2017-08-01T00:00:00-06:00","relpermalink":"/talk/icc2017/","section":"talk","summary":"Terrain is generally modeled on a grid of pixels, assuming that elevation values are constant within any single pixel of a Digital Elevation Model (DEM) (‘rigid pixel’ paradigm). This paradigm can generate imprecise measurements, be-cause it does not account for the slope and curvature of the terrain within each pixel, leading to precious information being lost. In order to improve the precision of in-terpolated points, this paper relaxes the rigid pixel assumption, allowing possible sub-pixel variations (‘surface-adjusted’ paradigm) to be used to interpolate eleva-tion of arbitrary points given a regular grid. Tests based on interpolating elevation values for 5,000 georeferenced random points from a DEM using the rigid pixel paradigm and different interpolation methods (e.g., weighted average, linear, bi-linear, bi-quadratic, bi-cubic, and best fitting polynomials) and different contiguity configurations (i.e., incorporating first and second order neighbors) are presented. Based on these tests, this paper examines the sensitivity of surface adjustment to a progression of spatial resolutions (i.e., 10, 30, 100, and 1000m DEMs), using sub-pixel variations that can be directly measured from 3m resolution LiDAR data.","tags":[],"title":"Cross-Scale Analysis of Sub-Pixel Variations in Digital Elevation Models","type":"talk"},{"authors":null,"categories":null,"content":"","date":1493272800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1493272800,"objectID":"5916df70286a57a85ef83d5c642b4a5b","permalink":"https://mehran.netlify.com/project/bsc.-projects_geomatics/","publishdate":"2017-04-27T00:00:00-06:00","relpermalink":"/project/bsc.-projects_geomatics/","section":"project","summary":"Course projects in my bachelor (Civil Surveying) --(2006-2010)","tags":["BSc"],"title":"BSc. Projects (Geomatics)","type":"project"},{"authors":null,"categories":null,"content":"","date":1493272800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1493272800,"objectID":"fe2a457b365876c064c0a4994e0954c5","permalink":"https://mehran.netlify.com/project/blunder-detection-in-dems/","publishdate":"2017-04-27T00:00:00-06:00","relpermalink":"/project/blunder-detection-in-dems/","section":"project","summary":"Gross error detection in Digital Elevation models Using Metahuristic Algorithms","tags":["MSc"],"title":"Blunder detection in DEMs","type":"project"},{"authors":null,"categories":null,"content":"","date":1493272800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1493272800,"objectID":"be288c959464ad7b14cf275ff9ad8194","permalink":"https://mehran.netlify.com/project/equal-area-map-projection/","publishdate":"2017-04-27T00:00:00-06:00","relpermalink":"/project/equal-area-map-projection/","section":"project","summary":"Coded world equal area map projections using python and ArcPy","tags":["Other"],"title":"Equal Area Map Projection","type":"project"},{"authors":null,"categories":null,"content":"","date":1493272800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1493272800,"objectID":"ec0d1b22e14d16101fd5383499bd642e","permalink":"https://mehran.netlify.com/project/hydrologic-flow-accumulation-modeling-using-surface-area/","publishdate":"2017-04-27T00:00:00-06:00","relpermalink":"/project/hydrologic-flow-accumulation-modeling-using-surface-area/","section":"project","summary":"This project presents one possible strategy for the incorporation of surface area into a flow accumulation matrix","tags":["PhD"],"title":"Hydrologic Flow Accumulation Modeling Using Surface Area","type":"project"},{"authors":null,"categories":null,"content":"","date":1493272800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1493272800,"objectID":"3006611feff213a09bf4753037294e11","permalink":"https://mehran.netlify.com/project/msc-thesis/","publishdate":"2017-04-27T00:00:00-06:00","relpermalink":"/project/msc-thesis/","section":"project","summary":"A Voronoi-base Algorithm for Medial Axis Extraction (Case Study: Watershed Delineation from River Networks)","tags":["MSc"],"title":"MSc Thesis","type":"project"},{"authors":null,"categories":null,"content":"","date":1493272800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1493272800,"objectID":"cdd6e6f062aecf54700775c8ca78cc1b","permalink":"https://mehran.netlify.com/project/metahuristic-optimization-algorithms/","publishdate":"2017-04-27T00:00:00-06:00","relpermalink":"/project/metahuristic-optimization-algorithms/","section":"project","summary":"Metaheuristic Optimization algorithms: the Genetic, Bee colony, Ant colony, Particle Swarm Optimization, Cat Swarm Optimization, Tabu search, and Hill Climbing.","tags":["MSc"],"title":"Metahuristic Optimization Algorithms","type":"project"},{"authors":null,"categories":null,"content":"","date":1493272800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1493272800,"objectID":"4b34d84f090ea73cd1abda03f1f49664","permalink":"https://mehran.netlify.com/project/stream-extraction-from-dem/","publishdate":"2017-04-27T00:00:00-06:00","relpermalink":"/project/stream-extraction-from-dem/","section":"project","summary":"Automating Flow Accumulation Thresholds for Extracting Stream Networks from Digital Elevation Models","tags":["PhD"],"title":"Stream Extraction from DEM","type":"project"},{"authors":null,"categories":null,"content":"","date":1493272800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1493272800,"objectID":"2e4eab816101983eb09c8312d687beb1","permalink":"https://mehran.netlify.com/project/sub-pixel-variations-in-dems/","publishdate":"2017-04-27T00:00:00-06:00","relpermalink":"/project/sub-pixel-variations-in-dems/","section":"project","summary":"Cross-Scale Analysis of Sub-pixel Variations in Digital Elevation Models","tags":["PhD"],"title":"Sub-pixel Variation of Elevation in DEMs","type":"project"},{"authors":null,"categories":null,"content":"","date":1493272800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1493272800,"objectID":"38db980bf343d0bcc097e6f93545b854","permalink":"https://mehran.netlify.com/project/surface-adjusted-distance/","publishdate":"2017-04-27T00:00:00-06:00","relpermalink":"/project/surface-adjusted-distance/","section":"project","summary":"Cross-scale Analysis of Surface Adjusted Distance in Digital Terrian","tags":["PhD"],"title":"Surface Adjusted Distance","type":"project"},{"authors":["Barbara P. Buttenfield","**Mehran Ghandehari**","Stefan Leyk","Lawrence V. Stanislawski","Meg Brantley","Yi Qiang"],"categories":null,"content":"","date":1467352800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1467352800,"objectID":"dd35741a3f941175b055f5d59a418df7","permalink":"https://mehran.netlify.com/publication/2016_buttenfield_etal_giscience16/","publishdate":"2016-07-01T00:00:00-06:00","relpermalink":"/publication/2016_buttenfield_etal_giscience16/","section":"publication","summary":"Distance metrics play significant roles in spatial modeling tasks, such as flood inundation (Tucker and Hancock 2010), stream extraction (Stanislawski et al. 2015), power line routing (Kiessling et al. 2003) and analysis of surface pollutants such as nitrogen (Harms et al. 2009). Avalanche risk is based on slope, aspect, and curvature, all directly computed from distance metrics (Gutiérrez 2012). Distance metrics anchor variogram analysis, kernel estimation, and spatial interpolation (Cressie 1993). Several approaches are employed to measure distance. Planar metrics measure straight line distance between two points (“as the crow flies”) and are simple and intuitive, but suffer from uncertainties. Planar metrics assume that Digital Elevation Model (DEM) pixels are rigid and flat, as tiny facets of ceramic tile approximating a continuous terrain surface. In truth, terrain can bend, twist and undulate within each pixel. Work with Light Detection and Ranging (lidar) data or High Resolution Topography to achieve precise measurements present challenges, as filtering can eliminate or distort significant features (Passalacqua et al. 2015). The current availability of lidar data is far from comprehensive in developed nations, and non-existent in many rural and undeveloped regions. Notwithstanding computational advances, distance estimation on DEMs has never been systematically assessed, due to assumptions that improvements are so small that surface adjustment is unwarranted. For individual pixels inaccuracies may be small, but additive effects can propagate dramatically, especially in regional models (e.g., disaster evacuation) or global models (e.g., sea level rise) where pixels span dozens to hundreds of kilometers (Usery et al 2003). Such models are increasingly common, lending compelling reasons to understand shortcomings in the use of planar distance metrics. Researchers have studied curvature-based terrain modeling. Jenny et al. (2011) use curvature to generate hierarchical terrain models. Schneider (2001) creates a ‘plausibility’ metric for DEM-extracted structure lines. d’Oleire-Oltmanns et al. (2014) adopt object-based image processing as an alternative to working with DEMs; acknowledging the pre-processing involved in converting terrain into an object model is computationally intensive, and  likely infeasible for some applications. This paper compares planar distance with surface adjusted distance, evolving from distance “as the crow flies” to distance “as the horse runs”. Several methods are compared for DEMs spanning a range of resolutions for the study area and validated against a 3 meter (m) lidar data benchmark. Error magnitudes vary with pixel size and with the method of surface adjustment. The rate of error increase may also vary with landscape type (terrain roughness, precipitation regimes and land settlement patterns). Cross-scale analysis for a single study area is reported here. Additional areas will be presented at the conference.","tags":[],"title":"Measuring Distance “As the Horse Runs”: Cross-Scale Comparison of Terrain-Based Metrics","type":"publication"},{"authors":null,"categories":null,"content":"Mehran Ghandehari, and Barbara P. Buttenfield (2015). \u0026lsquo;Density-Based Stream Network Extraction from Digital Elevation Models\u0026rsquo;, Abstract, 10th Annual Hydrologic Sciences Research Symposium, Boulder, Colorado, April 2-3. First place award for Best Poster.\n","date":1464760800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1464760800,"objectID":"c7b3fa5c0a54528daa1792213230ed83","permalink":"https://mehran.netlify.com/talk/hydrology2015/","publishdate":"2016-06-01T00:00:00-06:00","relpermalink":"/talk/hydrology2015/","section":"talk","summary":"This research proposes a new method to determine the best thresholds within previously established channel density partitions of the hydrological unit of interest. To obtain the best threshold, flow direction and flow accumulation are first calculated for the whole study area. Next, the study area is categorized on the basis of stream network density that is calculated from the vector NHD. The selection of an optimal flow accumulation threshold value iterates through a progression of values selected through a binary search. Results are compared to the benchmark data set, until a threshold value achieves the stream channel that is closest to the benchmark data set (Fig. 2). The results illustrate that the proposed method provides a more geographically and hydrologically valid database representation of elevation-derived stream networks.","tags":[],"title":"Density-Based Stream Network Extraction from Digital Elevation Models","type":"talk"},{"authors":[],"categories":null,"content":" Academic is a framework to help you create a beautiful website quickly. Perfect for personal sites, blogs, or business/project sites. Check out the latest demo of what you\u0026rsquo;ll get in less than 10 minutes. Then head on over to the Quick Start guide or take a look at the Release Notes.\n\nKey features:\n Easily manage various content including homepage, blog posts, publications, talks, and projects Extensible via color themes and widgets/plugins Write in Markdown for easy formatting and code highlighting, with LaTeX for mathematical expressions Social/academic network linking, Google Analytics, and Disqus comments Responsive and mobile friendly Simple and refreshing one page design Multilingual and easy to customize  Color Themes Academic is available in different color themes and font themes.\n       Install You can choose from one of the following four methods to install:\n one-click install using your web browser (recommended) install on your computer using Git with the Command Prompt/Terminal app install on your computer by downloading the ZIP files install on your computer with RStudio  Quick install using your web browser  Install Academic with Netlify  Netlify will provide you with a customizable URL to access your new site  On GitHub, go to your newly created academic-kickstart repository and edit config.toml to personalize your site. Shortly after saving the file, your site will automatically update Read the Quick Start Guide to learn how to add Markdown content. For inspiration, refer to the Markdown content which powers the Demo  Install with Git Prerequisites:\n Download and install Git Download and install Hugo   Fork the Academic Kickstart repository and clone your fork with Git:\ngit clone https://github.com/sourcethemes/academic-kickstart.git My_Website  Note that if you forked Academic Kickstart, the above command should be edited to clone your fork, i.e. replace sourcethemes with your GitHub username.\n Initialize the theme:\ncd My_Website git submodule update --init --recursive   Install with ZIP  Download and extract Academic Kickstart Download and extract the Academic theme to the themes/academic/ folder from the above step  Install with RStudio View the guide to installing Academic with RStudio\nQuick start  If you installed on your computer, view your new website by running the following command:\nhugo server  Now visit localhost:1313 and your new Academic powered website will appear. Otherwise, if using Netlify, they will provide you with your URL.\n Read the Quick Start Guide to learn how to add Markdown content, customize your site, and deploy it. For inspiration, refer to the Markdown content which powers the Demo\n Build your site by running the hugo command. Then host it for free using Github Pages or Netlify (refer to the first installation method). Alternatively, copy the generated public/ directory (by FTP, Rsync, etc.) to your production web server (such as a university\u0026rsquo;s hosting service).\n  Updating Feel free to star the project on Github to help keep track of updates and check out the release notes prior to updating your site.\nBefore updating the framework, it is recommended to make a backup of your entire website directory (or at least your themes/academic directory) and record your current version number.\nBy default, Academic is installed as a Git submodule which can be updated by running the following command:\ngit submodule update --remote --merge  Check out the update guide for full instructions and alternative methods.\nFeedback \u0026amp; Contributing Please use the issue tracker to let me know about any bugs or feature requests, or alternatively make a pull request.\nFor support, head over to the Hugo discussion forum.\nLicense Copyright 2016-present George Cushen.\nReleased under the MIT license.\n","date":1461132000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1515826800,"objectID":"ba6423d815d4f5949b7a69912feb741d","permalink":"https://mehran.netlify.com/post/getting-started/","publishdate":"2016-04-20T00:00:00-06:00","relpermalink":"/post/getting-started/","section":"post","summary":"Create a beautifully simple website or blog in under 10 minutes.","tags":["Academic"],"title":"Academic: the website designer for Hugo","type":"post"},{"authors":["Farid Karimipour","**Mehran Ghandehari**","Hugo Ledoux"],"categories":null,"content":"","date":1372658400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372658400,"objectID":"851ec2bae360b3e9a3d21068b9b5bd70","permalink":"https://mehran.netlify.com/publication/2013_karimipour_etal_cg/","publishdate":"2013-07-01T00:00:00-06:00","relpermalink":"/publication/2013_karimipour_etal_cg/","section":"publication","summary":"The watersheds are commonly delineated from digital elevation models (DEM). This approach is not efficient when an accurate DEM is not available. Furthermore, since raster-based algorithms are employed, the computations for large areas are very time consuming and even may be impractical. This article investigates delineation of the watersheds from the medial axis of river networks: If the river network is sampled by a set of points, the medial axis of the sample points provides an approximation of the catchments, whose aggregation results in the watersheds. Although this idea has been already proposed in the literature, the complexities of the medial axis extraction prevent it from being practically used. A major issue is appearing extraneous branches in the media axis due to perturbations of the sample points, which must be filtered out in a pre- or post-processing step. This article improves a Voronoi-based medial axis extraction algorithm by using labeled sample points to automatically avoid extraneous branches. The proposed method is used in four case studies to delineate the watersheds. The results illustrate that the proposed method is stable, easy to implement and robust, even in presence of significant noises and perturbations. The results also indicate that the watersheds delineated using the proposed and the DEM-based methods are reasonably comparable.","tags":[],"title":"Watershed delineation from the medial axis of river networks","type":"publication"},{"authors":["Farid Karimipour","**Mehran Ghandehari**"],"categories":null,"content":"","date":1372658400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372658400,"objectID":"0feefb8396a8e7752ca2a146273b535e","permalink":"https://mehran.netlify.com/publication/2013_karimipour_etal_tcs/","publishdate":"2013-07-01T00:00:00-06:00","relpermalink":"/publication/2013_karimipour_etal_tcs/","section":"publication","summary":"Continuous curves are approximated by sample points, which carry the shape information of the curve. If sampling is sufficiently dense, the sample points can be used to extract the structural properties of the curve (e.g., crust, medial axis, etc.). This article focuses on approximation of medial axis from sample points. Especially, we review the methods that approximate the medial axis using Voronoi diagram. Such methods are extremely sensitive to noise and boundary perturbations. Thus, a pre- or post-processing step is needed to filter irrelevant branches of the medial axis, which are introduced in this article. We, then, propose a new medial axis approximation algorithm that automatically avoids irrelevant branches through labeling sample points. The results indicate that our method is stable, easy to implement, robust and able to handle sharp corners, even in the presence of significant noise and perturbations.","tags":[],"title":"Watershed delineation from the medial axis of river networks","type":"publication"},{"authors":null,"categories":null,"content":"Mehran Ghandehari (2013). \u0026lsquo;Digital Elevation Model Approximation from Stream Networks: A Reversed Approach\u0026rsquo;, ISPRS Proceedings of the 2nd International Conference on the Sensors \u0026amp; Models in Photogrammetry and Remote Sensing Conference (SMPR 2013), Tehran, Iran, October 5-8, 2013, pp. 175-180.\n","date":1370066400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1370066400,"objectID":"d6fa0daa187bee3075efd859b4f2ca20","permalink":"https://mehran.netlify.com/talk/smpr2013/","publishdate":"2013-06-01T00:00:00-06:00","relpermalink":"/talk/smpr2013/","section":"talk","summary":"The delineation of stream networks and catchment areas is one the most common applications of Digital Elevation Models (DEMs). In this article, an innovative reversed approach for the approximation of DEMs from stream networks is presented. As a fundamental preprocessing step, the stream networks are sampled with a set of points. Then, a Delaunay triangulation and Voronoi diagram are used to extract the skeleton (medial axis) of stream networks as an approximation of the catchment areas. The catchment areas contain implicit information that is representative of the terrain, and so the elevation points can be extracted along the catchment area boundaries. Furthermore, we employ the stream orders to enrich the elevation data set. Finally, the elevation points are converted into an elevation grid through a raster interpolation method. While an approximation approach, the results show that the proposed method achieves the desired results.","tags":[],"title":"Digital Elevation Model Approximation from Stream Networks: A Reversed Approach","type":"talk"}]